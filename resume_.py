# -*- coding: utf-8 -*-
"""resume_.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KQtwoms_FtmePbcuKZVKPf3ZQXdvk5Js
"""

pip install python-docx

# import libraries
import pandas as pd
import docx
from docx import Document
from docx.shared import Pt
from docx.enum.style import WD_STYLE_TYPE
from docx.enum.text import WD_ALIGN_PARAGRAPH

"""One popular Python library for generating CV resumes is Python-docx. This library allows you to create and format Word documents (.docx) programmatically, including creating a CV or resume template and filling in the relevant information. Here's an example of how you can use Python-docx to create a simple resume:

"""

from docx import Document
from docx.shared import Inches

# create a new Word document
doc = Document()

# add a heading
doc.add_heading('John Doe', 0)

# add a section with a heading
doc.add_heading('Summary', level=1)
doc.add_paragraph('Experienced software engineer with a strong background in Python and machine learning.')

# add a section with a table of skills
doc.add_heading('Skills', level=1)
skills_table = doc.add_table(rows=3, cols=2)
skills_table.style = 'Table Grid'
skills_table.cell(0, 0).text = 'Python'
skills_table.cell(0, 1).text = 'Expert'
skills_table.cell(1, 0).text = 'Machine Learning'
skills_table.cell(1, 1).text = 'Intermediate'
skills_table.cell(2, 0).text = 'Java'
skills_table.cell(2, 1).text = 'Intermediate'

# add a section with work experience
doc.add_heading('Work Experience', level=1)
p = doc.add_paragraph()
company = p.add_run('ABC Company')
company.bold = True
p.add_run(' - Software Engineer')
p.add_run('\n2015 - present')
doc.add_paragraph('Developed and maintained Python-based machine learning algorithms.')

# add a section with education
doc.add_heading('Education', level=1)
p = doc.add_paragraph()
p.add_run('Bachelor of Science in Computer Science, XYZ University\n').italic = True
p.add_run('2011 - 2015')

# save the document
doc.save('resume.docx')

"""You can customize this example to suit your needs, such as adding more sections or changing the formatting. Python-docx provides a range of formatting options, such as font style and size, indentation, alignment, and bullet points, that you can use to make your CV look professional and visually appealing."""



